@{
    ViewBag.Title = "AddNewWorkoutPlan";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}
@model WorkoutPlanObjects.WorkoutPlanObject

<h1 class="pageHeader">Create New Workout Plan</h1>

<div id="plan_conents" class="plan_content box">

    <div style="text-align:right; width:95%;">
        <input type="button" class="editBtn" value="Edit Plan" data-div="plan_div" />
        @using (Html.BeginForm("savePlan", "Workout", FormMethod.Post))
        {
            <input type="submit" value="Save Plan" />
        }
    </div>
    
    
    <center>
        <h2>@Html.ValidationMessage("errorMessage")</h2>
        <h2 id="planDateTag"></h2>
        @if (Model.PlanDate == null)
        {
            <h4>@DateTime.Today.ToString("yyyy-MM-dd") </h4>
        }
        else
        {
            <h4>@Model.PlanDate.ToString("yyyy-MM-dd") </h4>
        }
        
    </center>
 
    <h4 id="planDateTag"></h4>
    <div id="setsDiv">
        @Html.Partial("WorkoutSetList", Session["WorkoutSetList"])
    </div>

    <div class="summary-box">
        <br />
        <h3 style="text-align:center">Total Distance:<br />@Model.TotalDistance meters</h3>
        <h3 style="text-align:center">Total Duration:<br />@Model.TotalDuration minutes</h3>
       <table width="250px">
           <tr>
               <td>
                   
                   Total Distance: <b id="planTotalDistance" > @Model.TotalDistance </b>&nbsp;meters
               </td>
               <td>E1: 00%</td>
           </tr>
           <tr>
               <td>
                   Total Duration: <b>@Model.TotalDuration </b>
               </td>
               <td>E2: 00%</td>

           </tr>
           <tr>
               <td></td>
               <td>E3: 00%</td>

           </tr>
           <tr>
               <td></td>
               <td>S1: 00%</td>

           </tr>
           <tr>
               <td></td>
               <td>S2: 00%</td>
           </tr>
           <tr>
               <td></td>
               <td>S3: 00%</td>
           </tr>
           <tr>
               <td style="text-align:right">Total:</td>
               <td>100%</td>
           </tr>
       </table>
    </div>

</div>

<div id="" class=" edit_box box">
    <table width="100%" align="center" class="tab-container">
        <tr>
            <td id="plan_div" class="activeDiv">
                <input type="button" class="tab" value="Edit Plan" data-tab="editPlan" />
                <input type="button" class="tab" value="New Section" data-tab="addSection" />
                <input type="button" class="tab" value="Delete Plan" data-tab="deletePlan" />
            </td>
            <td id="section_div" class="hidden">
                <input type="button" class="tab" value="Edit Section" data-tab="editSection" />
                <input type="button" class="tab" value="Add Group" data-tab="addGroup" />
                <input type="button" class="tab" value="Add Set" data-tab="addSet" />
            </td>
            <td id="group_div" class="hidden">
                <input type="button" class="tab" value="Edit Group" data-tab="editGroup" />
                <input type="button" class="tab" value="Add Group" data-tab="addGroup" />
                <input type="button" class="tab" value="Add Set" data-tab="addSet" />
            </td>
            <td id="set_div" class="hidden">
                <input type="button" class="tab" value="Edit Set" data-tab="editSet" />
            </td>
        </tr>
    </table>

    <div id="editPlan" class="activeTab">
        <h2>Edit Plan</h2>
        @using (Html.BeginForm("updatePlanDate", "Workout", FormMethod.Post))
        {
            <h4>Date: <input type="date" id="date" name="date" value="@DateTime.Today.ToString("yyyy-MM-dd")" onchange="setPlanDate();" /></h4>
            <input type="submit" value="Save" />
        }
    </div>

    <div id="addSection" class="hidden">
        <h2>Add Section</h2>
        
        @using (Html.BeginForm("addSection", "Workout",FormMethod.Post))
        { 
            <table>
                <tr>
                    <td>
                       Section Name: <input type="text" id="sectionName" name="sectionName" list="sectionNames"/> <h2>@Html.ValidationMessage("addSectionName")</h2>
                    </td>
                </tr>
                <tr>
                    <td>
                        Insert Position: <input type="text" id="selectPosition" name="selectPosition" list="sectionPositions" size="3" /> 
                        <h2>@Html.ValidationMessage("addSectionPosition")</h2>
                    </td>
                </tr>
            </table>
            <datalist id="sectionPositions">
                <option>0</option>
                @foreach (var item in Model.SubSetList)
                {
                    if (item.SetType == WorkoutPlanObjects.EnumWorkoutSetType.Section)
                    {
                        <option>
                            @item.OrderID
                        </option>
                    }
                }
            </datalist>
            
            <datalist id="sectionNames">
                <option>Warm up</option>
                <option>Main</option>
                <option>Warm down</option>
            </datalist>
            <input type="submit" value="Add Section" />
        }
    </div>

    <div id="deletePlan" class="hidden">
        <h2>Delete Plan</h2>
        @using (Html.BeginForm("deletePlan","Workout",FormMethod.Post))
        {
            @Html.Hidden("tblID", Model.tblID)   
            <input type="submit" value="Delete"/>
        }
    </div>

    <div id="editSection" class="hidden">
        <h2>Edit Section</h2>
        @using (Html.BeginForm("editSection", "Workout", FormMethod.Post))
        {
            @Html.Hidden("orderId")
            <h2>@Html.ValidationMessage("editSection")</h2>
            <table>
                <tr>
                    <td><h4>Section Name:</h4></td>
                    <td><input type="text" name="sectionName" list="sectionvalues" /></td>
                </tr>

                <tr>
                    <td><input type="submit" value="Update Section" name="command" /></td>
                    <td><input type="submit" value="Delete Section" name="command" /></td>
                </tr>
            </table>

            <datalist id="sectionvalues">
                <option>Warm up</option>
                <option>Main</option>
                <option>Warm down</option>
            </datalist>
        }
    </div>

    <div id="addGroup" class="hidden">
        <h2>Add Workout Group</h2>
        @using (Html.BeginForm("addGroup", "Workout", FormMethod.Post))
        {
            @Html.Hidden("addGroupParentId")
            <table>
                <tr>
                    <td>Repeats: <input type="text" name="repeats" /><h2>@Html.ValidationMessage("addGroupRepeat")</h2></td>
                    <td>
                        Group Location After: <input type="text" list="grouplocations" size="3" name="position" />
                        <h2>@Html.ValidationMessage("addGroupLocation")</h2>
                    </td>
                </tr>
            </table>

            <input type="submit" value="Add Group" />
            <datalist id="grouplocations"></datalist>
        }
    </div>

    <div id="addSet" class="hidden">
        <h2>Add Workout Set</h2>
        @using (Html.BeginForm("addSet", "Workout", FormMethod.Post))
        {
            @Html.Hidden("addSetParentId")

            <p>
                Repeats: <input type="number" size="5" name="repeat" min="1" id="addSetRepeat" oninput="calculate2()" /> &nbsp;&nbsp;&nbsp;
                Distance: <input type="number" size="5" name="distance" min="0" id="addSetDistance" oninput="calculate2()" />&nbsp;&nbsp;&nbsp;
                Stroke: <input type="text" list="strokes" size="10" name="stroke" id="addSetStrokes" />&nbsp;&nbsp;&nbsp;
            </p>
            <p>
                Type: <input type="text" list="type" size="10" name="type" id="addSetType" />&nbsp;&nbsp;&nbsp;
                Type Duration: <input type="text" name="typeDuration" />
            </p>
            <p>
                Description: <input type="text" size="15" name="description" id="addSetDescription" />&nbsp;&nbsp;&nbsp;
                Total Distance: <input type="text" size="10" min="0" name="totalDistance" id="addSetTotalDistance" />&nbsp;&nbsp;&nbsp;
                Total Duration: <input type="text" size="10" name="duration" id="addSetTotalDuration" />&nbsp;&nbsp;&nbsp;
            </p>
            <p>
                Energy Group: <input type="text" size="10" name="energyGroup" list="energy" id="addSetEnergyGroup" />&nbsp;&nbsp;&nbsp;
                Energy Amount: <input type="text" size="5" name="energyAmount"  id="addSetEnergyAmount" />&nbsp;&nbsp;&nbsp;
                Set Location After: <input type="text" size="5" min="0" name="position" list="setlocations" />
            </p>

            <br />
            <br />
            
            <input type="submit" value="Add Set" style="margin:10px" />

        }
        <datalist id="strokes">
            <option value="Free">
            <option value="Fly">
            <option value="Back">
            <option value="Rest">
            <option value="Medley">
        </datalist>

        <datalist id="energy">
            <option value="E1">
            <option value="E2">
            <option value="E3">
            <option value="S1">
            <option value="S2">
            <option value="S3">
        </datalist>

        <datalist id="type">
            <option value="None">
            <option value="Pace">
            <option value="Rest">
        </datalist>
        <datalist id="setlocations"></datalist>
    </div>

    <div id="editGroup" class="hidden">
        <h2>Edit Group</h2>
        @using (Html.BeginForm("editGroup", "Workout", FormMethod.Post))
        {
            @Html.Hidden("groupOrderId")
            <h2>@Html.ValidationMessage("editGroupRepeat")</h2>
            <table>
                <tr>
                    <td><h4>Repeats: </h4></td>
                    <td><input type="text" name="repeats" id="editGroupRepeats" /></td>
                </tr>

                <tr>
                    <td><input type="submit" value="Update Group" name="command" /></td>
                    <td><input type="submit" value="Delete Group" name="command" /></td>
                </tr>
            </table>
        }
    </div>

    <div id="editSet" class="hidden">
        <h2>Edit Workout Set</h2>
        @using (Html.BeginForm("editSet", "Workout", FormMethod.Post))
        {
            @Html.Hidden("editSetOrderId")

            <p>
                Repeats: <input type="text" size="5" name="repeat" id="editSetRepeat" oninput="calculate()" /> &nbsp;&nbsp;&nbsp;                
                Distance: <input type="text" size="5" name="distance" id="editSetDistance" oninput="calculate()"/>&nbsp;&nbsp;&nbsp;
                Stroke: <input type="text" list="strokes" size="10" name="stroke" id="editSetStrokes" />&nbsp;&nbsp;&nbsp;
                
            </p>
             <p>
                Type: <input type="text" list="type" size="10" name="type" id="editSetType" />&nbsp;&nbsp;&nbsp;
                Type Duration: <input type="text" name="typeDuration" />
            </p>
            <p>                
                Description: <input type="text" size="15" name="description" id="editSetDescription" />&nbsp;&nbsp;&nbsp;
                Total Distance: <input type="text" size="10" name="totalDistance" id="editSetTotalDistance" />&nbsp;&nbsp;&nbsp;
                
            </p>
            <p>
                Energy Group: <input type="text" size="10" name="energyGroup" list="energy" id="editSetEnergyGroup" />&nbsp;&nbsp;&nbsp;
                Energy Amount: <input type="text" size="5" name="energyAmount" id="editSetEnergyAmount" />
            </p>

            <br />
            <br />
            
            <input type="submit" value="Update Set" style="margin:10px" name="command" />
            <input type="submit" value="Delete Set" style="margin:10px" name="command" />

        }
        <datalist id="strokes">
            <option value="Free">
            <option value="Fly">
            <option value="Back">
            <option value="Rest">
            <option value="Medley">
        </datalist>

        <datalist id="energy">
            <option value="E1">
            <option value="E2">
            <option value="E3">
            <option value="S1">
            <option value="S2">
            <option value="S3">
        </datalist>

        <datalist id="type">
            <option value="None">
            <option value="Pace">
            <option value="Rest">
        </datalist>
    </div>

</div>




    <script type="text/javascript">

        // Function will run on page load
        function onPageLoad() {

            setPlanDate();      //set initial plan date with current date
        }

        // Function will dynamically update planDateTag header tags with week and day number
        function setPlanDate() {
            /*
            * ASSUMPTIONS:
            *
            *   1. Week begins on the Monday and ends Sunday. Ie Mon = Day1, Sun = Day7
            *   2. Season begins 1st Monday of September
            *
            */

            var tempDate = new Date(document.getElementById("date").value);
            tempDate.setDate(tempDate.getDate() + 1);

            var workoutDate = new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate());
            var seasonStartDate = getSeasonStartDate(workoutDate);

            if (workoutDate < seasonStartDate) {
                seasonStartDate = getSeasonStartDate(new Date(workoutDate.getFullYear() - 1, workoutDate.getMonth(), workoutDate.getDate()));
            }

            var totalDays = Math.round(((((workoutDate - seasonStartDate.getTime()) / 1000) / 60) / 60) / 24); //Rounds up after dividing to get number of days from milliseconds
            var totalWeeks = (totalDays - (totalDays % 7)) / 7;

            var weekNumber = totalWeeks + 1;
            var dayNumber = (totalDays % 7) + 1;

            document.getElementById("planDateTag").innerHTML = "Week " + weekNumber + ",  Day " + dayNumber;

            document.getElementsByName("WorkoutPlanDate")[0].value = tempDate.getMonth() + 1 + "/" + tempDate.getDate() + "/" + tempDate.getFullYear();// +" tempDate.toString();//.toDateString();

            console.log(document.getElementsByName("WorkoutPlanDate")[0].value);
        }

        //Helper function, gets the date of the first Monday of September
        function getSeasonStartDate(workoutDate) {

            // Getting any date in the first week of september with a Monday
            var septDay = new Date(workoutDate.getFullYear(), 08, 01);

            if (septDay.getDay() > 1) {
                septDay.setDate(septDay.getDate() + 7);
            }

            return new Date(septDay.getFullYear(), septDay.getMonth(), septDay.getDate() - septDay.getDay() + 1);

        }

        // set planDateTag onLoad
        window.onload = onPageLoad();

    </script>

    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script>

        $(window).load(function () {
            summaryBoxPosition();
        });

        $(window).resize(function () {
            summaryBoxPosition();
        });

        function summaryBoxPosition(){

            var left_val = ($(window).width() / 2) + 550;
            $(".summary-box").css({ left: left_val })
        }

    $(".editBtn").click(function () {

        var div = $(this).data("div");

        $(".activeDiv").removeClass("activeDiv").addClass("hidden");
        $("#" + div).removeClass("hidden").addClass("activeDiv");

        $(".highlightRow").removeClass("highlightRow");
        $(this).closest("tr").addClass("highlightRow");

        $(".tab-selected").addClass("tab").removeClass("tab-selected");
        $(".activeTab").removeClass("activeTab").addClass("hidden");
    });

    $(".tab").click(function () {

        $(".tab-selected").addClass("tab").removeClass("tab-selected");
        $(this).addClass("tab-selected").removeClass("tab");

        var tab = $(this).data("tab");

        $(".activeTab").removeClass("activeTab").addClass("hidden");
        $("#" + tab).removeClass("hidden").addClass("activeTab");

    });


    function editGroupBtnClicked(groupId, parentId, repeat) {
        document.getElementById("groupOrderId").value = groupId;
        document.getElementById("addSetParentId").value = parentId;
        document.getElementById("addGroupParentId").value = parentId;
        document.getElementById("editGroupRepeats").value = repeat;
        var requrl = '@Url.Action("getSubSetPosition", "Workout")';
            $.ajax({
                type: "POST",
                url: requrl,
                data: "{orderId:'" + groupId + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $('#grouplocations').empty();
                    $('#setlocations').empty();
                    $.each(data, function (index, id) {
                        $('#grouplocations').append('<option>' + id + '</option>');
                        $('#setlocations').append('<option>' + id + '</option>');

                        //    }
                    });
                },
            });
        }

        function editSetBtnClicked(groupId, repeats, energyGroupAmount, distance) {
            

            //need to change id to group id  and add hidden text when ui is done
            //"editSetBtnClicked(Model.OrderID,Model.Repeats,Model.Stroke,Model.Pace,Model.Rest,Model.Description,Model.EnergyGroupName,Model.EnergyGroupAmount,Model.Duration)" />
            /* <td><input type="text" size="5" name="repeat" id="editSetRepeat"/></td>
                    <td><input type="text" size="5" name="distance" id="editSetDistance"/></td>
                    <td><input type="text" list="strokes" size="10" name="stroke" id="editSetStrokes"/></td>
                    <td><input type="text" list="type" size="10" name="type" id="editSetType"/></td>
                    <td><input type="text" size="10" name="duration" id="editSetDuration"/></td>
                    <td><input type="text" size="15" name="description" id="editSetDescription"/></td>
                    <td><input type="text" size="10" name="totalDistance" id="editSetTotalDuration" /></td>
                    <td><input type="text" size="10" name="energyGroup" list="energy" id="editSetEnergyGroup" /></td>
                    <td><input type="text" size="5" name="energyAmount" id="editSetEnergyAmount"/></td>*/
            document.getElementById("editSetOrderId").value = groupId;
            //document.getElementById("editSetRepeat").value = repeats;
            //document.getElementById("editSetDistance").value = distance;
            //document.getElementById("editSetStrokes").value = stroke;
            //document.getElementById("editSetDuration").value = duration;
            //document.getElementById("editSetDescription").value = description;
            //document.getElementById("editSetEnergyGroup").value = energyGroupName;
           // document.getElementById("editSetEnergyAmount").value = energyGroupAmount;

            //document.getElementById("editSetTotalDuration").value = repeats * duration;

            /*if (pace =="") {
                document.getElementById("editSetType").value = rest;
            } else if (rest==""){
                document.getElementById("editSetType").value = pace;
            }*/


        }

        function editSectionBtnClicked(groupId) {
            document.getElementById("orderId").value = groupId;
            document.getElementById("addSetParentId").value = groupId;
            document.getElementById("addGroupParentId").value = groupId;



            var requrl = '@Url.Action("getSubSetPosition", "Workout")';
        $.ajax({
            type: "POST",
            url: requrl,
            data: "{orderId:'" + groupId + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $('#grouplocations').empty();
                $('#setlocations').empty();
                $.each(data, function (index, id) {
                    $('#grouplocations').append('<option>' + id + '</option>');
                    $('#setlocations').append('<option>' + id + '</option>');

                    //    }
                });
            },
        });
        }



    </script>
    <script>
        function calculate() {
            
            var ans = document.getElementById("editSetRepeat").value * document.getElementById("editSetDistance").value;
            if (ans >= 0) {
                document.getElementById("editSetEnergyAmount").value = ans;
                document.getElementById("editSetTotalDistance").value = ans;
                document.getElementById("planTotalDistance").innerHTML = @Model.TotalDistance + ans;
            }
        }

        function calculate2() {
            
            var ans = document.getElementById("addSetRepeat").value * document.getElementById("addSetDistance").value;
            if (ans >=0) {
                document.getElementById("addSetEnergyAmount").value = ans;
                document.getElementById("addSetTotalDistance").value = ans;
                document.getElementById("planTotalDistance").innerHTML = @Model.TotalDistance + ans;
            }
        }
    </script>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
