@{
    ViewBag.Title = "AddNewWorkoutPlan";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}
@model WorkoutPlanObjects.WorkoutPlanObject

<h1 class="pageHeader">Create New Workout Plan</h1>

<div id="plan_conents" class="plan_content box">

    <input type="button" class="editBtn" value="Edit Plan" data-div="plan_div" />
    <center>
        <h2 id="planDateTag"></h2>
        @if (Model.PlanDate == null)
        {
            <h4>@DateTime.Today.ToString("yyyy-MM-dd") </h4>
        }
        else
        {
            <h4>@Model.PlanDate.ToString("yyyy-MM-dd") </h4>
        }
        
    </center>
 
    <h4 id="planDateTag"></h4>
    <div id="setsDiv">
        @Html.Partial("WorkoutSetList", Session["WorkoutSetList"])
    </div>

</div>

<div id="plan_div" class="activeDiv edit_box box">
    <table width="100%" align="center" class="tab-container">
        <tr>
            <td>
                <input type="button" class="tab" value="Edit Plan" data-tab="editPlan" />
                <input type="button" class="tab" value="New Section" data-tab="addSection" />
                <input type="button" class="tab" value="Delete Plan" data-tab="deletePlan" />
            </td>
        </tr>
    </table>

    <div id="editPlan" class="activeTab">
        <h2>Edit Plan</h2>
        @using (Html.BeginForm("updatePlanDate", "Workout", FormMethod.Post))
        {
            <h4>Date: <input type="date" id="date" name="date" value="@DateTime.Today.ToString("yyyy-MM-dd")" onchange="setPlanDate();" /></h4>
            <input type="submit" value="Save" />
        }
    </div>
    <div id="addSection" class="hidden">
        <h2>Add Section</h2>
        
        @using (Html.BeginForm("addSection", "Workout",FormMethod.Post))
        { 
            <table>
                <tr>
                    <td>
                       Section Name: <input type="text" id="sectionName" name="sectionName" list="sectionNames"/>
                    </td>
                </tr>
                <tr>
                    <td>
                        Insert Position: <input type="text" id="selectPosition" name="selectPosition" list="sectionPositions" size="3" /> 
                    </td>
                </tr>
            </table>
            <datalist id="sectionPositions">
                <option>0</option>
                @foreach (var item in Model.SubSetList)
                {
                    if (item.SetType == WorkoutPlanObjects.EnumWorkoutSetType.Section)
                    {
                        <option>
                            @item.OrderID
                        </option>
                    }
                }
            </datalist>
            
            <datalist id="sectionNames">
                <option>Warm up</option>
                <option>Main</option>
                <option>Warm down</option>
            </datalist>
            <input type="submit" value="Add Section" />
        }
    </div>
    <div id="deletePlan" class="hidden">
        <h2>Delete Plan</h2>
        @using (Html.BeginForm("deletePlan","Workout",FormMethod.Post))
        {
            @Html.Hidden("tblID", Model.tblID)   
            <input type="submit" value="Delete"/>
        }
    </div>

   



</div>

<div id="section_div" class="edit_box box hidden">
    <table width="100%" align="center" class="tab-container">
        <tr>
            <td>
                <input type="button" class="tab" value="Edit Section" data-tab="editSection" />
                <input type="button" class="tab" value="Add Group" data-tab="addGroup" />
                <input type="button" class="tab" value="Add Set" data-tab="addSet" />
            </td>
        </tr>

    </table>
    <div id="editSection" class="hidden">
        <h2>Edit Section</h2>
        @using(Html.BeginForm("editSection", "Workout", FormMethod.Post))
        {
            @Html.Hidden("parentId")
            <table>
                <tr>
                    <td><h4>Section Name:</h4></td>
                    <td><input type="text" /></td>
                </tr>

                <tr>
                    <td><input type="submit" value="Update Section" name="command"/></td>
                    <td><input type="submit" value="Delete Section" name="command"/></td>
                </tr>
            </table>
        }
    </div>


    <div id="addGroup" class="hidden">
        <h2>Add Workout Group</h2>
        @using(Html.BeginForm("addGroup", "Workout", FormMethod.Post))
        {
            @Html.Hidden("parentId")
            <table>
                <tr>
                    <td>Repeats: <input type="text" name="repeats"/></td>
                    <td>Group Location After: <input type="text" list="grouplocations" size="3"  name="position"/></td>
                </tr>
            </table>

            <input type="submit" value="Add Group" />
            <datalist id="grouplocations">
                <option>0</option><!-- TO-DO: Populate the datalist with the locations of the group-->
                <option>1</option>
                <option>2</option>
                <option>3</option>
            </datalist>
        }
    </div>

    <div id="addSet" class="hidden">
        <h2>Add Workout Set</h2>
        @using(Html.BeginForm("addSet", "Workout", FormMethod.Post))
        {
             @Html.Hidden("parentId")
            <table>
                <tr>
                    <th width="50">Repeats</th>
                    <th width="50">Distance</th>
                    <th width="50">Stroke</th>
                    <th width="50">Type</th>
                    <th width="50">Duration</th>
                    <th width="50">Total Distance</th>
                    <th width="50">Energy Group</th>
                    <th width="50">Set Location After</th>
                </tr>
                <tr>
                    <td><input type="text"  size="5"/></td>
                    <td><input type="text"  size="5" /></td>
                    <td><input type="text" list="strokes" size="10"/></td>
                    <td><input type="text" list="type" size="10"/></td>
                    <td><input type="text" size="10"/></td>
                    <td><input type="text" size="10"/></td>
                    <td><input type="text" size="10"/></td>
                    <td><input type="text" size="5"/></td>
                    
                </tr>

                

            </table>
    <input type="submit" value="Add Set" style="margin:10px"/>

        }
        <datalist id="strokes">
            <option value="Free">
            <option value="Fly">
            <option value="Back">
            <option value="Rest">
            <option value="Medley">
        </datalist>

        <datalist id="type">
            <option value="Pace">
            <option value="Rest">
        </datalist>
    </div>



</div>

<script type="text/javascript">

    // Function will run on page load
    function onPageLoad() {

        setPlanDate();      //set initial plan date with current date
    }

    // Function will dynamically update planDateTag header tags with week and day number
    function setPlanDate() {
        /*
        * ASSUMPTIONS:
        *
        *   1. Week begins on the Monday and ends Sunday. Ie Mon = Day1, Sun = Day7
        *   2. Season begins 1st Monday of September
        *
        */

        var tempDate = new Date(document.getElementById("date").value);
        tempDate.setDate(tempDate.getDate() + 1);

        var workoutDate = new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate());
        var seasonStartDate = getSeasonStartDate(workoutDate);

        if (workoutDate < seasonStartDate) {
            seasonStartDate = getSeasonStartDate(new Date(workoutDate.getFullYear() - 1, workoutDate.getMonth(), workoutDate.getDate()));
        }

        var totalDays = Math.round(((((workoutDate - seasonStartDate.getTime()) / 1000) / 60) / 60) / 24); //Rounds up after dividing to get number of days from milliseconds
        var totalWeeks = (totalDays - (totalDays % 7)) / 7;

        var weekNumber = totalWeeks + 1;
        var dayNumber = (totalDays % 7) + 1;

        document.getElementById("planDateTag").innerHTML = "Week " + weekNumber + ",  Day " + dayNumber;

        document.getElementsByName("WorkoutPlanDate")[0].value = tempDate.getMonth() + 1 + "/" + tempDate.getDate() + "/" + tempDate.getFullYear();// +" tempDate.toString();//.toDateString();

        console.log(document.getElementsByName("WorkoutPlanDate")[0].value);
    }

    //Helper function, gets the date of the first Monday of September
    function getSeasonStartDate(workoutDate) {

        // Getting any date in the first week of september with a Monday
        var septDay = new Date(workoutDate.getFullYear(), 08, 01);

        if (septDay.getDay() > 1) {
            septDay.setDate(septDay.getDate() + 7);
        }

        return new Date(septDay.getFullYear(), septDay.getMonth(), septDay.getDate() - septDay.getDay() + 1);

    }

    // set planDateTag onLoad
    window.onload = onPageLoad();

</script>

<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script>

    $(".editBtn").click(function () {

        var div = $(this).data("div");

        $(".activeDiv").removeClass("activeDiv").addClass("hidden");
        $("#" + div).removeClass("hidden").addClass("activeDiv");

    });

    $(".tab").click(function () {

        $(".tab-selected").addClass("tab").removeClass("tab-selected");
        $(this).addClass("tab-selected").removeClass("tab");

        var tab = $(this).data("tab");

        $(".activeTab").removeClass("activeTab").addClass("hidden");
        $("#" + tab).removeClass("hidden").addClass("activeTab");

    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
